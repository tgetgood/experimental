:some.namespace/keyword

64

[4 5 60]

(def testmap
  {:a/simple 42
   :map      (fn [x] (+ 1 x))})

(def defn (macro [name args body]
                 (list def name (list (quote fn) args body))))

(defn adder
  [a b]
  (+ a b 1))

(adder 4 5)

((get testmap :map) 5)

(defn fact [n]
  (if (= n 0)
    1
    (* n (fact (- n 1)))))

(fact 0)
(fact 5)

(defn fib [n]
  (if (< n 2)
    n
    (+ (fib (- n 1)) (fib (- n 2)))))

(fib 1)
(fib 9)
